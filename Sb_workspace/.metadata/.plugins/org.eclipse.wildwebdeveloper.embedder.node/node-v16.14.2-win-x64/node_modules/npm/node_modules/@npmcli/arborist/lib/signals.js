perating with
    older npm versions.

    2: The default lockfile version used by npm version 7.  Includes both the
    version 1 lockfile data and version 3 lockfile data, for maximum
    determinism and interoperability, at the expense of more bytes on disk.

    3: Only the new lockfile information introduced in npm version 7.  Smaller
    on disk than lockfile version 2, but not interoperable with older npm
    versions.  Ideal if all users are on npm version 7 and higher.
  `,
  flatten: (key, obj, flatOptions) => {
    flatOptions.lockfileVersion = obj[key] && parseInt(obj[key], 10)
  },
})

define('loglevel', {
  default: 'notice',
  type: [
    'silent',
    'error',
    'warn',
    'notice',
    'http',
    'timing',
    'info',
    'verbose',
    'silly',
  ],
  description: `
    What level of logs to report.  All logs are written to a debug log,
    with the path to that file printed if the execution of a command fails.

    Any logs of a higher level than the setting are shown. The default is
    "notice".

    See also the \`foreground-scripts\` config.
  `,
})

define('logs-max', {
  default: 10,
  type: Number,
  description: `
    The maximum number of log files to store.
  `,
})

define('long', {
  default: false,
  type: Boolean,
  short: 'l',
  description: `
    Show extended information in \`ls\`, \`search\`, and \`help-search\`.
  `,
})
