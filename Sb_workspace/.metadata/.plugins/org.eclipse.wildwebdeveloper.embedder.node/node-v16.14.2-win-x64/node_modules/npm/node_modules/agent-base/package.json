         * @returns A processor used for CSS transformations.
         */
        processor: Processor;
        /**
         * @returns Options from the Processor#process(css, opts) call that produced
         * this Result instance.
         */
        opts: ResultOptions;
    }
    /**
     * Provides the result of the PostCSS transformations.
     */
    interface Result {
        /**
         * Alias for css property.
         */
        toString(): string;
        /**
         * Creates an instance of Warning and adds it to messages.
         * @param message Used in the text property of the message object.
         * @param options Properties for Message object.
         */
        warn(message: string, options?: WarningOptions): void;
        /**
         * @returns Warnings from plugins, filtered from messages.
         */
        warnings(): ResultMessage[];
        /**
         * A CSS string representing this Result's Root instance.
         */
        css: string;
        /**
         * Alias for css property to use with syntaxes that generate non-CSS output.
         */
        content: string;
        /**
         * An instance of the SourceMapGenerator class from the source-map library,
         * representing changes to the Result's Root instance.
         * This property will have a value only if the user does not want an inline
         * source map. By default, PostCSS generates inline source maps, written
         * directly into the processed CSS. The map property will be empty by default.
         * An external source map will be generated — and assigned to map — only if
         * the user has set the map.inline option to false, or if PostCSS w