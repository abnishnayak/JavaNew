/*
 * Copyright (c) 2005, 2015, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

/*
 * Header file for packages of paramaters passed between Java Accessibility
 * and native Assistive Technologies
 */

#ifndef __AccessBridgePackages_H__
#define __AccessBridgePackages_H__

#include <jni.h>
#include <windows.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifdef ACCESSBRIDGE_ARCH_LEGACY
typedef jobject JOBJECT64;
typedef HWND ABHWND64;
#define ABHandleToLong
#define ABLongToHandle
#else
typedef jlong JOBJECT64;
typedef long ABHWND64;
#define ABHandleToLong HandleToLong
#define ABLongToHandle LongToHandle
#endif

#define MAX_BUFFER_SIZE   10240
#define MAX_STRING_SIZE   1024
#define SHORT_STRING_SIZE   256

    // object types
    typedef JOBJECT64 AccessibleContext;
    typedef JOBJECT64 AccessibleText;
    typedef JOBJECT64 AccessibleValue;
    typedef JOBJECT64 AccessibleSelection;
    typedef JOBJECT64 Java_Object;
    typedef JOBJECT64 PropertyChangeEvent;
    typedef JOBJECT64 FocusEvent;
    typedef JOBJECT64 CaretEvent;
    typedef JOBJECT64 MouseEvent;
    typedef JOBJECT64 MenuEvent;
    typedef JOBJECT64 AccessibleTable;
    typedef JOBJECT64 AccessibleHyperlink;
    typedef JOBJECT64 AccessibleHypertext;

    /**
     ******************************************************
     *  Java event types
     ******************************************************
     */

#define cPropertyChangeEvent (jlong) 1          // 1
#define cFocusGainedEvent (jlong) 2             // 2
#define cFocusLostEvent (jlong) 4               // 4
#define cCaretUpdateEvent (jlong) 8             // 8
#define cMouseClickedEvent (jlong) 16           // 10
#define cMouseEnteredEvent (jlong) 32           // 20
#define cMouseExitedEvent (jlong) 64            // 40
#define cMousePressedEvent (jlong) 128          // 80
#define cMouseReleasedEvent (jlong) 256         // 100
#define cMenuCanceledEvent (jlong) 512          // 200
#define cMenuDeselectedEvent (jlong) 1024       // 400
#define cMenuSelectedEvent (jlong) 2048         // 800
#define cPopupMenuCanceledEvent (jlong) 4096    // 1000
#define cPopupMenuWillBecomeInvisibleEvent (jlong) 8192         // 2000
#define cPopupMenuWillBecomeVisibleEvent (jlong) 16384          // 4000
#define cJavaShutdownEvent (jlong) 32768        // 8000

    /**
     ******************************************************
     *  Accessible Roles
     *      Defines all AccessibleRoles in Local.US
     ******************************************************
     */

    /**
     * Object is used to alert the user about something.
     */
#define ACCESSIBLE_ALERT L"alert"

    /**
     * The header for a column of data.
     */
#define ACCESSIBLE_COLUMN_HEADER L"column header"

    /**
     * Object that can be drawn into and is used to trap
     * events.
     * see ACCESSIBLE_FRAME
     * see ACCESSIBLE_GLASS_PANE
     * see ACCESSIBLE_LAYERED_PANE
     */
#define ACCESSIBLE_CANVAS L"canvas"

    /**
     * A list of choices the user can select from.  Also optionally
     * allows the user to enter a choice of their own.
     */
#define ACCESSIBLE_COMBO_BOX L"combo box"

    /**
     * An iconified internal frame in a DESKTOP_PANE.
     * see ACCESSIBLE_DESKTOP_PANE
     * see ACCESSIBLE_INTERNAL_FRAME
     */
#define ACCESSIBLE_DESKTOP_ICON L"desktop icon"

    /**
     * A frame-like object that is clipped by a desktop pane.  The
     * desktop pane, internal frame, and desktop icon objects are
     * often used to create multiple document interfaces within an
     * application.
     * see ACCESSIBLE_DESKTOP_ICON
     * see ACCESSIBLE_DESKTOP_PANE
     * see ACCESSIBLE_FRAME
     */
#define ACCESSIBLE_INTERNAL_FRAME L"internal frame"

    /**
     * A pane that supports internal frames and
     * iconified versions of those internal frames.
     * see ACCESSIBLE_DESKTOP_ICON
     * see ACCESSIBLE_INTERNAL_FRAME
     */
#define ACCESSIBLE_DESKTOP_PANE L"desktop pane"

    /**
     * A specialized pane whose primary use is inside a DIALOG
     * see ACCESSIBLE_DIALOG
     */
#define ACCESSIBLE_OPTION_PANE L"option pane"

    /**
     * A top level window with no title or border.
     * see ACCESSIBLE_FRAME
     * see ACCESSIBLE_DIALOG
     */
#define ACCESSIBLE_WINDOW L"window"

    /**
     * A top level window with a title bar, border, menu bar, etc.  It is
     * often used as the primary window for an application.
     * see ACCESSIBLE_DIALOG
     * see ACCESSIBLE_CANVAS
     * see ACCESSIBLE_WINDOW
     */
#define ACCESSIBLE_FRAME L"frame"

    /**
     * A top level window with title bar and a border.  A dialog is similar
     * to a frame, but it has fewer properties and is often used as a
     * secondary window for an application.
     * see ACCESSIBLE_FRAME
     * see ACCESSIBLE_WINDOW
     */
#define ACCESSIBLE_DIALOG L"dialog"

    /**
     * A specialized dialog that lets the user choose a color.
     */
#define ACCESSIBLE_COLOR_CHOOSER L"color chooser"


    /**
     * A pane that allows the user to navigate through
     * and select the contents of a directory.  May be used
     * by a file chooser.
     * see ACCESSIBLE_FILE_CHOOSER
     */
#define ACCESSIBLE_DIRECTORY_PANE L"directory pane"

    /**
     * A specialized dialog that displays the files in the directory
     * and lets the user select a file, browse a different directory,
     * or specify a filename.  May use the directory pane to show the
     * contents of a directory.
     * see ACCESSIBLE_DIRECTORY_PANE
     */
#define ACCESSIBLE_FILE_CHOOSER L"file chooser"

    /**
     * An object that fills up space in a user interface.  It is often
     * used in interfaces to tweak the spacing between components,
     * but serves no other purpose.
     */
#define ACCESSIBLE_FILLER L"filler"

    /**
     * A hypertext anchor
     */
#define ACCESSIBLE_HYPERLINK L"hyperlink"

    /**
     * A small fixed size picture, typically used to decorate components.
     */
#define ACCESSIBLE_ICON L"icon"

    /**
     * An object used to present an icon or short string in an interface.
     */
#define ACCESSIBLE_LABEL L"label"

    /**
     * A specialized pane that has a glass pane and a layered pane as its
     * children.
     * see ACCESSIBLE_GLASS_PANE
     * see ACCESSIBLE_LAYERED_PANE
     */
#define ACCESSIBLE_ROOT_PANE L"root pane"

    /**
     * A pane that is guaranteed to be painted on top
     * of all panes beneath it.
     * see ACCESSIBLE_ROOT_PANE
     * see ACCESSIBLE_CANVAS
     */
#define ACCESSIBLE_GLASS_PANE L"glass pane"

    /**
     * A specialized pane that allows its children to be drawn in layers,
     * providing a form of stacking order.  This is usually the pane that
     * holds the menu bar as well as the pane that contains most of the
     * visual components in a window.
     * see ACCESSIBLE_GLASS_PANE
     * see ACCESSIBLE_ROOT_PANE
     */
#define ACCESSIBLE_LAYERED_PANE L"layered pane"

    /**
     * An object that presents a list of objects to the user and allows the
     * user to select one or more of them.  A list is usually contained
     * within a scroll pane.
     * see ACCESSIBLE_SCROLL_PANE
     * see ACCESSIBLE_LIST_ITEM
     */
#define ACCESSIBLE_LIST L"list"

    /**
     * An object that presents an element in a list.  A list is usually
     * contained within a scroll pane.
     * see ACCESSIBLE_SCROLL_PANE
     * see ACCESSIBLE_LIST
     */
#define ACCESSIBLE_LIST_ITEM L"list item"

    /**
     * An object usually drawn at the top of the primary dialog box of
     * an application that contains a list of menus the user can choose
     * from.  For example, a menu bar might contain menus for "File,"
     * "Edit," and "Help."
     * see ACCESSIBLE_MENU
     * see ACCESSIBLE_POPUP_MENU
     * see ACCESSIBLE_LAYERED_PANE
